# Generated by Django 4.2.24 on 2025-09-29 19:07

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, help_text='Phone number for OTP authentication', max_length=20, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('role', models.CharField(choices=[('user', 'User'), ('admin', 'Admin')], default='user', help_text='User role in the system', max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended')], default='active', help_text='Current status of the user account', max_length=10)),
                ('avatar', models.ImageField(blank=True, help_text='User profile picture', null=True, upload_to='avatars/')),
                ('bio', models.TextField(blank=True, help_text='User biography or description', max_length=500, null=True)),
                ('social_links', models.JSONField(blank=True, default=dict, help_text='Social media usernames')),
                ('preferences', models.JSONField(blank=True, default=dict, help_text='User preferences')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Workspace name', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Optional description', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation timestamp')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
            ],
            options={
                'verbose_name': 'Workspace',
                'verbose_name_plural': 'Workspaces',
                'db_table': 'workspaces',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WorkspaceMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique member ID', primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('member', 'Member')], default='member', help_text='Role of the user', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation timestamp')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last update timestamp')),
                ('user', models.ForeignKey(help_text='User', on_delete=django.db.models.deletion.CASCADE, related_name='workspace_members', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(help_text='Workspace', on_delete=django.db.models.deletion.CASCADE, related_name='members', to='app.workspace')),
            ],
            options={
                'verbose_name': 'Workspace Member',
                'verbose_name_plural': 'Workspace Members',
                'db_table': 'workspace_members',
                'ordering': ['role', 'updated_at'],
                'unique_together': {('user', 'workspace')},
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.CharField(help_text='Unique invoice number per workspace', max_length=50)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('paid', 'Paid'), ('cancelled', 'Cancelled')], default='draft', help_text='Current invoice status', max_length=20)),
                ('type', models.CharField(choices=[('invoice', 'Invoice'), ('credit_note', 'Credit Note'), ('debit_note', 'Debit Note')], default='invoice', help_text='Type of the invoice', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Total invoice amount', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('description', models.TextField(blank=True, help_text='Optional invoice description', null=True)),
                ('client', models.JSONField(blank=True, default=dict, help_text="Client details: must contain 'name', optional 'email', 'phone', 'address'")),
                ('due_date', models.DateField(blank=True, help_text='Payment due date', null=True)),
                ('paid_date', models.DateField(blank=True, help_text='Date when invoice was paid', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Invoice creation timestamp')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Invoice last updated timestamp')),
                ('created_by', models.ForeignKey(help_text='User who created the invoice', on_delete=django.db.models.deletion.CASCADE, related_name='created_invoices', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated the invoice', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_invoices', to=settings.AUTH_USER_MODEL)),
                ('workspace', models.ForeignKey(help_text='Workspace owning this invoice', on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='app.workspace')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
                'db_table': 'invoices',
                'ordering': ['-created_at'],
                'unique_together': {('workspace', 'number')},
            },
        ),
    ]
